<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:h="http://xmlns.jcp.org/jsf/html"
>
<h:head>
    <title>Start Page</title>
</h:head>
<h:body>
    <h1> Showcase for JSF and Primefaces</h1>

    <h2> Motivation </h2>

    This little application demonstrates a few features of JSF and allows a comparison to Primefaces. The focus is on
    exploring the capabilities and limits of technology, not on realism from a business perspective. Some of the
    bjectives are:

    <ul>
        <li>Explore efford during development and integration</li>
        <li>Explore the functional and nonfunctional capabilities</li>
        <li>Explore navigation strategies in JSF</li>
        <li>Compare JSF to Primeface pages with respect to acessability</li>
        <li>Compare JSF to Primeface pages with respect to the availiable components</li>
    </ul>

    <h2> Contents </h2>

    <h3> Product Configuration based on Templates</h3>

    IMPLEMENTED AS STUB his use case is implemented as a faces flow. It contains of some very basic pages with some input fields and a
    backing bean to keep those inputs. There is neither logic, nor fancy components, but you can see that the inputs
    are kept even if you navigate back and forth through the flow.

    <ul>
        <li>Example for flow (fields are kept during navigation within the flow)</li>
        <li>URL parameter is used for</li>
    </ul>

    <h:form>
        <h:commandLink action="productconfig" value="Product Configuration" immediate="true"/>
    </h:form>


    <h3> Create Instances based on Product Configuraiton</h3>

    NOT IMPLEMENTED YET another flow (capture product based on a configuration) that can be called from the first flow
    using inbound / Outbound parameters. For simplicity the flow should consist of only 2 pages (capture form and
    a possibility to review the captured instance with the option to return to the capture form to apply changes)

    <ul>
        <li>Should</li>
    </ul>


    <h3> Template Explorer</h3>

    This use case is implements a page with some tables to show the possibilities of JSF tables and ajax.

    <ul>
        <li>Example for ajax enabled table (dynamic update, highlighting of selected cells etc.)</li>
    </ul>

    <h:form>
        <h:commandLink action="templateviewer" value="template viewer" immediate="true"/>
    </h:form>

    <h:outputText value="Result: #{sessionInformation.resultTemplateBrowser}"/>

</h:body>
</html>
